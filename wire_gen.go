// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"net/http"
	"websocket/api/handler"
	"websocket/api/handler/admin/app"
	user2 "websocket/api/handler/admin/user"
	"websocket/api/handler/api"
	"websocket/api/handler/push"
	"websocket/api/handler/user"
	"websocket/api/middleware"
	"websocket/api/router"
	"websocket/cache"
	"websocket/config"
	"websocket/connection"
	"websocket/repo"
	api2 "websocket/service/api"
)

// Injectors from wire.go:

func Initialize() *http.Server {
	redis := connection.NewRedis()
	userCache := cache.NewUserCache(redis)
	mySQl := connection.NewMySQL()
	repoApp := repo.NewApp(mySQl)
	middleWare := middleware.NewMiddleWare(userCache, repoApp)
	repoUser := repo.NewUser(mySQl)
	apiApi := api.NewApi(userCache, repoUser)
	message := repo.NewMessage(mySQl)
	messageRead := repo.NewMessageRead(mySQl)
	messageService := api2.NewMessageService(message, messageRead)
	pushPush := push.NewPush(messageService)
	userUser := user.NewUser()
	ws := handler.NewWs(repoApp, messageRead)
	userService := api2.NewUserService(repoUser)
	user3 := user2.NewUser(userService)
	appService := api2.NewAppService(repoApp)
	appApp := app.NewApp(appService)
	handlerHandler := &handler.Handler{
		Api:       apiApi,
		Push:      pushPush,
		User:      userUser,
		Ws:        ws,
		AdminUser: user3,
		AdminApp:  appApp,
	}
	routerRouter := router.NewRouter(middleWare, handlerHandler)
	server := NewHttp(routerRouter)
	return server
}

// wire.go:

func NewHttp(router2 *router.Router) *http.Server {
	return &http.Server{
		Addr:           config.App.Address,
		Handler:        router2.Run(),
		MaxHeaderBytes: 1 << 20,
	}
}

var providerSet = wire.NewSet(connection.NewMySQL, connection.NewRedis, cache.NewUserCache, repo.NewApp, repo.NewMessage, repo.NewUser, repo.NewMessageRead, api.NewApi, push.NewPush, user.NewUser, handler.NewWs, user2.NewUser, app.NewApp, api2.NewMessageService, api2.NewUserService, api2.NewAppService, middleware.NewMiddleWare, router.NewRouter, wire.Struct(new(handler.Handler), "*"), NewHttp)
