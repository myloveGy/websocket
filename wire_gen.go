// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"websocket/api/handler"
	"websocket/api/handler/api"
	"websocket/api/handler/push"
	"websocket/api/handler/user"
	"websocket/api/middleware"
	"websocket/api/router"
	"websocket/cache"
	"websocket/connection"
	"websocket/repo"
)

// Injectors from wire.go:

func Initialize() *router.Router {
	redis := connection.NewRedis()
	userCache := cache.NewUserCache(redis)
	db := connection.NewDB()
	app := repo.NewApp(db)
	middleWare := middleware.NewMiddleWare(userCache, app)
	repoUser := repo.NewUser(db)
	apiApi := api.NewApi(userCache, repoUser)
	message := repo.NewMessage(db)
	messageRead := repo.NewMessageRead(db)
	pushPush := push.NewPush(message, messageRead)
	userUser := user.NewUser()
	ws := handler.NewWs(app)
	handlerHandler := &handler.Handler{
		Api:  apiApi,
		Push: pushPush,
		User: userUser,
		Ws:   ws,
	}
	routerRouter := router.NewRouter(middleWare, handlerHandler)
	return routerRouter
}

// wire.go:

var providerSet = wire.NewSet(connection.NewDB, connection.NewRedis, cache.NewUserCache, repo.NewApp, repo.NewMessage, repo.NewUser, repo.NewMessageRead, api.NewApi, push.NewPush, user.NewUser, handler.NewWs, middleware.NewMiddleWare, router.NewRouter, wire.Struct(new(handler.Handler), "*"))
